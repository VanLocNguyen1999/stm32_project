ARM GAS  C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_pwr.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_PWR_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_PWR_DeInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	HAL_PWR_DeInit:
  25              	.LFB74:
  26              		.file 1 "board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c"
   1:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
   2:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   ******************************************************************************
   3:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @file    stm32f4xx_hal_pwr.c
   4:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @author  MCD Application Team
   5:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief   PWR HAL module driver.
   6:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This file provides firmware functions to manage the following 
   7:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          functionalities of the Power Controller (PWR) peripheral:
   8:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           + Initialization and de-initialization functions
   9:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           + Peripheral Control functions 
  10:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         
  11:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   ******************************************************************************
  12:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @attention
  13:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  14:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * Copyright (c) 2017 STMicroelectronics.
  15:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * All rights reserved.
  16:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  17:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  18:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * the root directory of this software component.
  19:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  20:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   ******************************************************************************
  21:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */ 
  22:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  23:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Includes ------------------------------------------------------------------*/
  24:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #include "stm32f4xx_hal.h"
  25:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  26:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @addtogroup STM32F4xx_HAL_Driver
  27:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  28:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  29:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  30:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR PWR
  31:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief PWR HAL module driver
  32:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
ARM GAS  C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s 			page 2


  33:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  34:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  35:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #ifdef HAL_PWR_MODULE_ENABLED
  36:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  37:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private typedef -----------------------------------------------------------*/
  38:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private define ------------------------------------------------------------*/
  39:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @addtogroup PWR_Private_Constants
  40:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  41:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  42:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
  43:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_PVD_Mode_Mask PWR PVD Mode Mask
  44:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  45:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */     
  46:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_MODE_IT               0x00010000U
  47:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_MODE_EVT              0x00020000U
  48:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_RISING_EDGE           0x00000001U
  49:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_FALLING_EDGE          0x00000002U
  50:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
  51:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @}
  52:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  53:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  54:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
  55:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @}
  56:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */    
  57:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private macro -------------------------------------------------------------*/
  58:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private variables ---------------------------------------------------------*/
  59:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private function prototypes -----------------------------------------------*/
  60:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private functions ---------------------------------------------------------*/
  61:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  62:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions PWR Exported Functions
  63:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  64:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  65:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  66:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions_Group1 Initialization and de-initialization functions 
  67:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *  @brief    Initialization and de-initialization functions
  68:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  69:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @verbatim
  70:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
  71:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               ##### Initialization and de-initialization functions #####
  72:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
  73:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
  74:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       After reset, the backup domain (RTC registers, RTC backup data 
  75:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       registers and backup SRAM) is protected against possible unwanted 
  76:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       write accesses. 
  77:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       To enable access to the RTC Domain and RTC registers, proceed as follows:
  78:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+) Enable the Power Controller (PWR) APB1 interface clock using the
  79:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****             __HAL_RCC_PWR_CLK_ENABLE() macro.
  80:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+) Enable access to RTC domain using the HAL_PWR_EnableBkUpAccess() function.
  81:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  
  82:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @endverbatim
  83:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  84:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  85:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  86:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
  87:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Deinitializes the HAL PWR peripheral registers to their default reset values.
  88:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
  89:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
ARM GAS  C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s 			page 3


  90:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DeInit(void)
  91:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
  27              		.loc 1 91 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  92:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_RCC_PWR_FORCE_RESET();
  32              		.loc 1 92 3 view .LVU1
  33 0000 044B     		ldr	r3, .L2
  34 0002 1A6A     		ldr	r2, [r3, #32]
  35 0004 42F08052 		orr	r2, r2, #268435456
  36 0008 1A62     		str	r2, [r3, #32]
  93:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_RCC_PWR_RELEASE_RESET();
  37              		.loc 1 93 3 view .LVU2
  38 000a 1A6A     		ldr	r2, [r3, #32]
  39 000c 22F08052 		bic	r2, r2, #268435456
  40 0010 1A62     		str	r2, [r3, #32]
  94:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
  41              		.loc 1 94 1 is_stmt 0 view .LVU3
  42 0012 7047     		bx	lr
  43              	.L3:
  44              		.align	2
  45              	.L2:
  46 0014 00380240 		.word	1073887232
  47              		.cfi_endproc
  48              	.LFE74:
  50              		.section	.text.HAL_PWR_EnableBkUpAccess,"ax",%progbits
  51              		.align	1
  52              		.global	HAL_PWR_EnableBkUpAccess
  53              		.syntax unified
  54              		.thumb
  55              		.thumb_func
  57              	HAL_PWR_EnableBkUpAccess:
  58              	.LFB75:
  95:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  96:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
  97:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables access to the backup domain (RTC registers, RTC 
  98:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         backup data registers and backup SRAM).
  99:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note If the HSE divided by 2, 3, ..31 is used as the RTC clock, the 
 100:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         Backup Domain Access should be kept enabled.
 101:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note The following sequence is required to bypass the delay between
 102:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         DBP bit programming and the effective enabling  of the backup domain.
 103:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         Please check the Errata Sheet for more details under "Possible delay
 104:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         in backup domain protection disabling/enabling after programming the
 105:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         DBP bit" section.
 106:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 107:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 108:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableBkUpAccess(void)
 109:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
  59              		.loc 1 109 1 is_stmt 1 view -0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 8
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
  64 0000 82B0     		sub	sp, sp, #8
  65              	.LCFI0:
ARM GAS  C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s 			page 4


  66              		.cfi_def_cfa_offset 8
 110:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __IO uint32_t dummyread;
  67              		.loc 1 110 3 view .LVU5
 111:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_DBP_BB = (uint32_t)ENABLE;
  68              		.loc 1 111 3 view .LVU6
  69              		.loc 1 111 32 is_stmt 0 view .LVU7
  70 0002 044B     		ldr	r3, .L6
  71 0004 0122     		movs	r2, #1
  72 0006 1A62     		str	r2, [r3, #32]
 112:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   dummyread = PWR->CR;
  73              		.loc 1 112 3 is_stmt 1 view .LVU8
  74              		.loc 1 112 18 is_stmt 0 view .LVU9
  75 0008 034B     		ldr	r3, .L6+4
  76 000a 1B68     		ldr	r3, [r3]
  77              		.loc 1 112 13 view .LVU10
  78 000c 0193     		str	r3, [sp, #4]
 113:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   UNUSED(dummyread);
  79              		.loc 1 113 3 is_stmt 1 view .LVU11
  80 000e 019B     		ldr	r3, [sp, #4]
 114:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
  81              		.loc 1 114 1 is_stmt 0 view .LVU12
  82 0010 02B0     		add	sp, sp, #8
  83              	.LCFI1:
  84              		.cfi_def_cfa_offset 0
  85              		@ sp needed
  86 0012 7047     		bx	lr
  87              	.L7:
  88              		.align	2
  89              	.L6:
  90 0014 00000E42 		.word	1108213760
  91 0018 00700040 		.word	1073770496
  92              		.cfi_endproc
  93              	.LFE75:
  95              		.section	.text.HAL_PWR_DisableBkUpAccess,"ax",%progbits
  96              		.align	1
  97              		.global	HAL_PWR_DisableBkUpAccess
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 102              	HAL_PWR_DisableBkUpAccess:
 103              	.LFB76:
 115:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 116:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 117:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables access to the backup domain (RTC registers, RTC 
 118:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         backup data registers and backup SRAM).
 119:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note If the HSE divided by 2, 3, ..31 is used as the RTC clock, the 
 120:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         Backup Domain Access should be kept enabled.
 121:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note The following sequence is required to bypass the delay between
 122:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         DBP bit programming and the effective disabling  of the backup domain.
 123:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         Please check the Errata Sheet for more details under "Possible delay
 124:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         in backup domain protection disabling/enabling after programming the
 125:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         DBP bit" section.
 126:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 127:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 128:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableBkUpAccess(void)
 129:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 104              		.loc 1 129 1 is_stmt 1 view -0
ARM GAS  C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s 			page 5


 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 8
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109 0000 82B0     		sub	sp, sp, #8
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 8
 130:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __IO uint32_t dummyread;
 112              		.loc 1 130 3 view .LVU14
 131:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_DBP_BB = (uint32_t)DISABLE;
 113              		.loc 1 131 3 view .LVU15
 114              		.loc 1 131 32 is_stmt 0 view .LVU16
 115 0002 044B     		ldr	r3, .L10
 116 0004 0022     		movs	r2, #0
 117 0006 1A62     		str	r2, [r3, #32]
 132:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   dummyread = PWR->CR;
 118              		.loc 1 132 3 is_stmt 1 view .LVU17
 119              		.loc 1 132 18 is_stmt 0 view .LVU18
 120 0008 034B     		ldr	r3, .L10+4
 121 000a 1B68     		ldr	r3, [r3]
 122              		.loc 1 132 13 view .LVU19
 123 000c 0193     		str	r3, [sp, #4]
 133:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   UNUSED(dummyread);
 124              		.loc 1 133 3 is_stmt 1 view .LVU20
 125 000e 019B     		ldr	r3, [sp, #4]
 134:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 126              		.loc 1 134 1 is_stmt 0 view .LVU21
 127 0010 02B0     		add	sp, sp, #8
 128              	.LCFI3:
 129              		.cfi_def_cfa_offset 0
 130              		@ sp needed
 131 0012 7047     		bx	lr
 132              	.L11:
 133              		.align	2
 134              	.L10:
 135 0014 00000E42 		.word	1108213760
 136 0018 00700040 		.word	1073770496
 137              		.cfi_endproc
 138              	.LFE76:
 140              		.section	.text.HAL_PWR_ConfigPVD,"ax",%progbits
 141              		.align	1
 142              		.global	HAL_PWR_ConfigPVD
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 147              	HAL_PWR_ConfigPVD:
 148              	.LVL0:
 149              	.LFB77:
 135:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 136:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 137:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @}
 138:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 139:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 140:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions_Group2 Peripheral Control functions 
 141:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *  @brief Low Power modes configuration functions 
 142:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
 143:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @verbatim
ARM GAS  C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s 			page 6


 144:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 145:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
 146:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                  ##### Peripheral Control functions #####
 147:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
 148:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****      
 149:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     *** PVD configuration ***
 150:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     =========================
 151:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 152:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) The PVD is used to monitor the VDD power supply by comparing it to a 
 153:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           threshold selected by the PVD Level (PLS[2:0] bits in the PWR_CR).
 154:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) A PVDO flag is available to indicate if VDD/VDDA is higher or lower 
 155:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           than the PVD threshold. This event is internally connected to the EXTI 
 156:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           line16 and can generate an interrupt if enabled. This is done through
 157:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           __HAL_PWR_PVD_EXTI_ENABLE_IT() macro.
 158:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) The PVD is stopped in Standby mode.
 159:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 160:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     *** Wake-up pin configuration ***
 161:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     ================================
 162:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 163:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Wake-up pin is used to wake up the system from Standby mode. This pin is 
 164:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           forced in input pull-down configuration and is active on rising edges.
 165:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) There is one Wake-up pin: Wake-up Pin 1 on PA.00.
 166:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 	   (++) For STM32F446xx there are two Wake-Up pins: Pin1 on PA.00 and Pin2 on PC.13
 167:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****            (++) For STM32F410xx/STM32F412xx/STM32F413xx/STM32F423xx  there are three Wake-Up pins: 
 168:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 169:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     *** Low Power modes configuration ***
 170:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     =====================================
 171:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 172:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The devices feature 3 low-power modes:
 173:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Sleep mode: Cortex-M4 core stopped, peripherals kept running.
 174:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Stop mode: all clocks are stopped, regulator running, regulator 
 175:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           in low power mode
 176:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Standby mode: 1.2V domain powered off.
 177:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    
 178:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Sleep mode ***
 179:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    ==================
 180:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 181:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Entry:
 182:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         The Sleep mode is entered by using the HAL_PWR_EnterSLEEPMode(Regulator, SLEEPEntry)
 183:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               functions with
 184:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFI: enter SLEEP mode with WFI instruction
 185:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFE: enter SLEEP mode with WFE instruction
 186:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFE_NO_EVT_CLEAR: Enter SLEEP mode with WFE instruction and
 187:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                                                 no clear of pending event before.
 188:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       
 189:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       -@@- The Regulator parameter is not used for the STM32F4 family 
 190:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               and is kept as parameter just to maintain compatibility with the 
 191:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               lower power families (STM32L).
 192:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Exit:
 193:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         Any peripheral interrupt acknowledged by the nested vectored interrupt 
 194:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               controller (NVIC) can wake up the device from Sleep mode.
 195:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 196:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Stop mode ***
 197:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    =================
 198:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 199:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       In Stop mode, all clocks in the 1.2V domain are stopped, the PLL, the HSI,
 200:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       and the HSE RC oscillators are disabled. Internal SRAM and register contents 
ARM GAS  C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s 			page 7


 201:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       are preserved.
 202:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The voltage regulator can be configured either in normal or low-power mode.
 203:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       To minimize the consumption In Stop mode, FLASH can be powered off before 
 204:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       entering the Stop mode using the HAL_PWREx_EnableFlashPowerDown() function.
 205:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       It can be switched on again by software after exiting the Stop mode using
 206:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       the HAL_PWREx_DisableFlashPowerDown() function. 
 207:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 208:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Entry:
 209:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****          The Stop mode is entered using the HAL_PWR_EnterSTOPMode(Regulator, STOPEntry) 
 210:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****              function with:
 211:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****        (++) Regulator:
 212:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+++) Main regulator ON.
 213:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+++) Low Power regulator ON.
 214:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****        (++) STOPEntry:
 215:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+++) PWR_STOPENTRY_WFI              : Enter STOP mode with WFI instruction.
 216:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+++) PWR_STOPENTRY_WFE              : Enter STOP mode with WFE instruction and
 217:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                                                clear of pending events before.
 218:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+++) PWR_STOPENTRY_WFE_NO_EVT_CLEAR : Enter STOP mode with WFE instruction and
 219:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                                                no clear of pending event before.
 220:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Exit:
 221:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         Any EXTI Line (Internal or External) configured in Interrupt/Event mode.
 222:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 223:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Standby mode ***
 224:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    ====================
 225:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 226:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     (+)
 227:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The Standby mode allows to achieve the lowest power consumption. It is based 
 228:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       on the Cortex-M4 deep sleep mode, with the voltage regulator disabled. 
 229:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The 1.2V domain is consequently powered off. The PLL, the HSI oscillator and 
 230:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       the HSE oscillator are also switched off. SRAM and register contents are lost 
 231:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       except for the RTC registers, RTC backup registers, backup SRAM and Standby 
 232:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       circuitry.
 233:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    
 234:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The voltage regulator is OFF.
 235:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       
 236:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (++) Entry:
 237:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+++) The Standby mode is entered using the HAL_PWR_EnterSTANDBYMode() function.
 238:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (++) Exit:
 239:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+++) WKUP pin rising edge, RTC alarm (Alarm A and Alarm B), RTC wake-up,
 240:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****              tamper event, time-stamp event, external reset in NRST pin, IWDG reset.
 241:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 242:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Auto-wake-up (AWU) from low-power mode ***
 243:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    =============================================
 244:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 245:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     
 246:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****      (+) The MCU can be woken up from low-power mode by an RTC Alarm event, an RTC 
 247:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       Wake-up event, a tamper event or a time-stamp event, without depending on 
 248:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       an external interrupt (Auto-wake-up mode).
 249:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 250:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) RTC auto-wake-up (AWU) from the Stop and Standby modes
 251:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****        
 252:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC alarm event, it is necessary to 
 253:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               configure the RTC to generate the RTC alarm using the HAL_RTC_SetAlarm_IT() function.
 254:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 255:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC Tamper or time stamp event, it 
 256:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****              is necessary to configure the RTC to detect the tamper or time stamp event using the
 257:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                 HAL_RTCEx_SetTimeStamp_IT() or HAL_RTCEx_SetTamper_IT() functions.
ARM GAS  C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s 			page 8


 258:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                   
 259:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC Wake-up event, it is necessary to
 260:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               configure the RTC to generate the RTC Wake-up event using the HAL_RTCEx_SetWakeUpTime
 261:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 262:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @endverbatim
 263:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
 264:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 265:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 266:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 267:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Configures the voltage threshold detected by the Power Voltage Detector(PVD).
 268:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param sConfigPVD pointer to an PWR_PVDTypeDef structure that contains the configuration
 269:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *        information for the PVD.
 270:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Refer to the electrical characteristics of your device datasheet for
 271:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         more details about the voltage threshold corresponding to each 
 272:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         detection level.
 273:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 274:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 275:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_ConfigPVD(PWR_PVDTypeDef *sConfigPVD)
 276:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 150              		.loc 1 276 1 is_stmt 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 277:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameters */
 278:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_LEVEL(sConfigPVD->PVDLevel));
 155              		.loc 1 278 3 view .LVU23
 279:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_MODE(sConfigPVD->Mode));
 156              		.loc 1 279 3 view .LVU24
 280:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 281:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set PLS[7:5] bits according to PVDLevel value */
 282:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   MODIFY_REG(PWR->CR, PWR_CR_PLS, sConfigPVD->PVDLevel);
 157              		.loc 1 282 3 view .LVU25
 158 0000 1E4A     		ldr	r2, .L17
 159 0002 1368     		ldr	r3, [r2]
 160 0004 23F0E003 		bic	r3, r3, #224
 161 0008 0168     		ldr	r1, [r0]
 162 000a 0B43     		orrs	r3, r3, r1
 163 000c 1360     		str	r3, [r2]
 283:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 284:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 285:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_EVENT();
 164              		.loc 1 285 3 view .LVU26
 165 000e 1C4B     		ldr	r3, .L17+4
 166 0010 5A68     		ldr	r2, [r3, #4]
 167 0012 22F48032 		bic	r2, r2, #65536
 168 0016 5A60     		str	r2, [r3, #4]
 286:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_IT();
 169              		.loc 1 286 3 view .LVU27
 170 0018 1A68     		ldr	r2, [r3]
 171 001a 22F48032 		bic	r2, r2, #65536
 172 001e 1A60     		str	r2, [r3]
 287:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_RISING_EDGE();
 173              		.loc 1 287 3 view .LVU28
 174 0020 9A68     		ldr	r2, [r3, #8]
 175 0022 22F48032 		bic	r2, r2, #65536
 176 0026 9A60     		str	r2, [r3, #8]
ARM GAS  C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s 			page 9


 288:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_FALLING_EDGE(); 
 177              		.loc 1 288 3 view .LVU29
 178 0028 DA68     		ldr	r2, [r3, #12]
 179 002a 22F48032 		bic	r2, r2, #65536
 180 002e DA60     		str	r2, [r3, #12]
 289:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 290:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Configure interrupt mode */
 291:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_MODE_IT) == PVD_MODE_IT)
 181              		.loc 1 291 3 view .LVU30
 182              		.loc 1 291 17 is_stmt 0 view .LVU31
 183 0030 4368     		ldr	r3, [r0, #4]
 184              		.loc 1 291 5 view .LVU32
 185 0032 13F4803F 		tst	r3, #65536
 186 0036 04D0     		beq	.L13
 292:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 293:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_IT();
 187              		.loc 1 293 5 is_stmt 1 view .LVU33
 188 0038 114A     		ldr	r2, .L17+4
 189 003a 1368     		ldr	r3, [r2]
 190 003c 43F48033 		orr	r3, r3, #65536
 191 0040 1360     		str	r3, [r2]
 192              	.L13:
 294:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 295:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 296:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Configure event mode */
 297:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_MODE_EVT) == PVD_MODE_EVT)
 193              		.loc 1 297 3 view .LVU34
 194              		.loc 1 297 17 is_stmt 0 view .LVU35
 195 0042 4368     		ldr	r3, [r0, #4]
 196              		.loc 1 297 5 view .LVU36
 197 0044 13F4003F 		tst	r3, #131072
 198 0048 04D0     		beq	.L14
 298:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 299:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_EVENT();
 199              		.loc 1 299 5 is_stmt 1 view .LVU37
 200 004a 0D4A     		ldr	r2, .L17+4
 201 004c 5368     		ldr	r3, [r2, #4]
 202 004e 43F48033 		orr	r3, r3, #65536
 203 0052 5360     		str	r3, [r2, #4]
 204              	.L14:
 300:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 301:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 302:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Configure the edge */
 303:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_RISING_EDGE) == PVD_RISING_EDGE)
 205              		.loc 1 303 3 view .LVU38
 206              		.loc 1 303 17 is_stmt 0 view .LVU39
 207 0054 4368     		ldr	r3, [r0, #4]
 208              		.loc 1 303 5 view .LVU40
 209 0056 13F0010F 		tst	r3, #1
 210 005a 04D0     		beq	.L15
 304:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 305:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_RISING_EDGE();
 211              		.loc 1 305 5 is_stmt 1 view .LVU41
 212 005c 084A     		ldr	r2, .L17+4
 213 005e 9368     		ldr	r3, [r2, #8]
 214 0060 43F48033 		orr	r3, r3, #65536
 215 0064 9360     		str	r3, [r2, #8]
ARM GAS  C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s 			page 10


 216              	.L15:
 306:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 307:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 308:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_FALLING_EDGE) == PVD_FALLING_EDGE)
 217              		.loc 1 308 3 view .LVU42
 218              		.loc 1 308 17 is_stmt 0 view .LVU43
 219 0066 4368     		ldr	r3, [r0, #4]
 220              		.loc 1 308 5 view .LVU44
 221 0068 13F0020F 		tst	r3, #2
 222 006c 04D0     		beq	.L12
 309:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 310:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_FALLING_EDGE();
 223              		.loc 1 310 5 is_stmt 1 view .LVU45
 224 006e 044A     		ldr	r2, .L17+4
 225 0070 D368     		ldr	r3, [r2, #12]
 226 0072 43F48033 		orr	r3, r3, #65536
 227 0076 D360     		str	r3, [r2, #12]
 228              	.L12:
 311:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 312:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 229              		.loc 1 312 1 is_stmt 0 view .LVU46
 230 0078 7047     		bx	lr
 231              	.L18:
 232 007a 00BF     		.align	2
 233              	.L17:
 234 007c 00700040 		.word	1073770496
 235 0080 003C0140 		.word	1073822720
 236              		.cfi_endproc
 237              	.LFE77:
 239              		.section	.text.HAL_PWR_EnablePVD,"ax",%progbits
 240              		.align	1
 241              		.global	HAL_PWR_EnablePVD
 242              		.syntax unified
 243              		.thumb
 244              		.thumb_func
 246              	HAL_PWR_EnablePVD:
 247              	.LFB78:
 313:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 314:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 315:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables the Power Voltage Detector(PVD).
 316:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 317:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 318:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnablePVD(void)
 319:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 248              		.loc 1 319 1 is_stmt 1 view -0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252              		@ link register save eliminated.
 320:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_PVDE_BB = (uint32_t)ENABLE;
 253              		.loc 1 320 3 view .LVU48
 254              		.loc 1 320 33 is_stmt 0 view .LVU49
 255 0000 014B     		ldr	r3, .L20
 256 0002 0122     		movs	r2, #1
 257 0004 1A61     		str	r2, [r3, #16]
 321:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 258              		.loc 1 321 1 view .LVU50
ARM GAS  C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s 			page 11


 259 0006 7047     		bx	lr
 260              	.L21:
 261              		.align	2
 262              	.L20:
 263 0008 00000E42 		.word	1108213760
 264              		.cfi_endproc
 265              	.LFE78:
 267              		.section	.text.HAL_PWR_DisablePVD,"ax",%progbits
 268              		.align	1
 269              		.global	HAL_PWR_DisablePVD
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 274              	HAL_PWR_DisablePVD:
 275              	.LFB79:
 322:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 323:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 324:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables the Power Voltage Detector(PVD).
 325:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 326:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 327:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisablePVD(void)
 328:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 276              		.loc 1 328 1 is_stmt 1 view -0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280              		@ link register save eliminated.
 329:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_PVDE_BB = (uint32_t)DISABLE;
 281              		.loc 1 329 3 view .LVU52
 282              		.loc 1 329 33 is_stmt 0 view .LVU53
 283 0000 014B     		ldr	r3, .L23
 284 0002 0022     		movs	r2, #0
 285 0004 1A61     		str	r2, [r3, #16]
 330:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 286              		.loc 1 330 1 view .LVU54
 287 0006 7047     		bx	lr
 288              	.L24:
 289              		.align	2
 290              	.L23:
 291 0008 00000E42 		.word	1108213760
 292              		.cfi_endproc
 293              	.LFE79:
 295              		.section	.text.HAL_PWR_EnableWakeUpPin,"ax",%progbits
 296              		.align	1
 297              		.global	HAL_PWR_EnableWakeUpPin
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 302              	HAL_PWR_EnableWakeUpPin:
 303              	.LVL1:
 304              	.LFB80:
 331:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 332:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 333:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables the Wake-up PINx functionality.
 334:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param WakeUpPinx Specifies the Power Wake-Up pin to enable.
 335:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         This parameter can be one of the following values:
 336:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN1
ARM GAS  C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s 			page 12


 337:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN2 available only on STM32F410xx/STM32F446xx/STM32F412xx/STM32F413x
 338:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN3 available only on STM32F410xx/STM32F412xx/STM32F413xx/STM32F423x
 339:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 340:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 341:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableWakeUpPin(uint32_t WakeUpPinx)
 342:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 305              		.loc 1 342 1 is_stmt 1 view -0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 343:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameter */
 344:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinx));
 310              		.loc 1 344 3 view .LVU56
 345:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 346:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Enable the wake up pin */
 347:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(PWR->CSR, WakeUpPinx);
 311              		.loc 1 347 3 view .LVU57
 312 0000 024A     		ldr	r2, .L26
 313 0002 5368     		ldr	r3, [r2, #4]
 314 0004 0343     		orrs	r3, r3, r0
 315 0006 5360     		str	r3, [r2, #4]
 348:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 316              		.loc 1 348 1 is_stmt 0 view .LVU58
 317 0008 7047     		bx	lr
 318              	.L27:
 319 000a 00BF     		.align	2
 320              	.L26:
 321 000c 00700040 		.word	1073770496
 322              		.cfi_endproc
 323              	.LFE80:
 325              		.section	.text.HAL_PWR_DisableWakeUpPin,"ax",%progbits
 326              		.align	1
 327              		.global	HAL_PWR_DisableWakeUpPin
 328              		.syntax unified
 329              		.thumb
 330              		.thumb_func
 332              	HAL_PWR_DisableWakeUpPin:
 333              	.LVL2:
 334              	.LFB81:
 349:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 350:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 351:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables the Wake-up PINx functionality.
 352:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param WakeUpPinx Specifies the Power Wake-Up pin to disable.
 353:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         This parameter can be one of the following values:
 354:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN1
 355:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN2 available only on STM32F410xx/STM32F446xx/STM32F412xx/STM32F413x
 356:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN3 available only on STM32F410xx/STM32F412xx/STM32F413xx/STM32F423x
 357:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 358:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 359:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableWakeUpPin(uint32_t WakeUpPinx)
 360:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 335              		.loc 1 360 1 is_stmt 1 view -0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339              		@ link register save eliminated.
ARM GAS  C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s 			page 13


 361:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameter */
 362:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinx));  
 340              		.loc 1 362 3 view .LVU60
 363:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 364:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Disable the wake up pin */
 365:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(PWR->CSR, WakeUpPinx);
 341              		.loc 1 365 3 view .LVU61
 342 0000 024A     		ldr	r2, .L29
 343 0002 5368     		ldr	r3, [r2, #4]
 344 0004 23EA0003 		bic	r3, r3, r0
 345 0008 5360     		str	r3, [r2, #4]
 366:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 346              		.loc 1 366 1 is_stmt 0 view .LVU62
 347 000a 7047     		bx	lr
 348              	.L30:
 349              		.align	2
 350              	.L29:
 351 000c 00700040 		.word	1073770496
 352              		.cfi_endproc
 353              	.LFE81:
 355              		.section	.text.HAL_PWR_EnterSLEEPMode,"ax",%progbits
 356              		.align	1
 357              		.global	HAL_PWR_EnterSLEEPMode
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
 362              	HAL_PWR_EnterSLEEPMode:
 363              	.LVL3:
 364              	.LFB82:
 367:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 368:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 369:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enters Sleep mode.
 370:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *   
 371:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Sleep mode, all I/O pins keep the same state as in Run mode.
 372:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * 
 373:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Sleep mode, the systick is stopped to avoid exit from this mode with
 374:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       systick interrupt when used as time base for Timeout 
 375:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *                
 376:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param Regulator Specifies the regulator state in SLEEP mode.
 377:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            This parameter can be one of the following values:
 378:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_MAINREGULATOR_ON: SLEEP mode with regulator ON
 379:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_LOWPOWERREGULATOR_ON: SLEEP mode with low power regulator ON
 380:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note This parameter is not used for the STM32F4 family and is kept as parameter
 381:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       just to maintain compatibility with the lower power families.
 382:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param SLEEPEntry Specifies if SLEEP mode in entered with WFI or WFE instruction.
 383:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 384:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_SLEEPENTRY_WFI              : Enter SLEEP mode with WFI instruction
 385:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_SLEEPENTRY_WFE              : Enter SLEEP mode with WFE instruction and
 386:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *                                                   clear of pending events before.
 387:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_SLEEPENTRY_WFE_NO_EVT_CLEAR : Enter SLEEP mode with WFE instruction and
 388:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *                                                   no clear of pending event before.
 389:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 390:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 391:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnterSLEEPMode(uint32_t Regulator, uint8_t SLEEPEntry)
 392:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 365              		.loc 1 392 1 is_stmt 1 view -0
 366              		.cfi_startproc
ARM GAS  C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s 			page 14


 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369              		@ link register save eliminated.
 393:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Prevent unused argument(s) compilation warning */
 394:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   UNUSED(Regulator);
 370              		.loc 1 394 3 view .LVU64
 395:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 396:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameters */
 397:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_REGULATOR(Regulator));
 371              		.loc 1 397 3 view .LVU65
 398:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_SLEEP_ENTRY(SLEEPEntry));
 372              		.loc 1 398 3 view .LVU66
 399:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 400:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear SLEEPDEEP bit of Cortex System Control Register */
 401:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 373              		.loc 1 401 3 view .LVU67
 374 0000 074A     		ldr	r2, .L36
 375 0002 1369     		ldr	r3, [r2, #16]
 376 0004 23F00403 		bic	r3, r3, #4
 377 0008 1361     		str	r3, [r2, #16]
 402:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 403:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select SLEEP mode entry -------------------------------------------------*/
 404:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if(SLEEPEntry == PWR_SLEEPENTRY_WFI)
 378              		.loc 1 404 3 view .LVU68
 379              		.loc 1 404 5 is_stmt 0 view .LVU69
 380 000a 0129     		cmp	r1, #1
 381 000c 05D0     		beq	.L35
 405:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {   
 406:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Interrupt */
 407:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFI();
 408:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 409:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   else
 410:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 411:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     if(SLEEPEntry != PWR_SLEEPENTRY_WFE_NO_EVT_CLEAR)
 382              		.loc 1 411 5 is_stmt 1 view .LVU70
 383              		.loc 1 411 7 is_stmt 0 view .LVU71
 384 000e 0329     		cmp	r1, #3
 385 0010 01D0     		beq	.L34
 412:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     {
 413:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       /* Clear all pending event */
 414:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       __SEV();
 386              		.loc 1 414 7 is_stmt 1 view .LVU72
 387              		.syntax unified
 388              	@ 414 "board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 389 0012 40BF     		sev
 390              	@ 0 "" 2
 415:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       __WFE();
 391              		.loc 1 415 7 view .LVU73
 392              	@ 415 "board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 393 0014 20BF     		wfe
 394              	@ 0 "" 2
 395              		.thumb
 396              		.syntax unified
 397              	.L34:
 416:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     }
 417:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 418:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Event */
ARM GAS  C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s 			page 15


 419:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
 398              		.loc 1 419 5 view .LVU74
 399              		.syntax unified
 400              	@ 419 "board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 401 0016 20BF     		wfe
 402              	@ 0 "" 2
 420:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 421:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 403              		.loc 1 421 1 is_stmt 0 view .LVU75
 404              		.thumb
 405              		.syntax unified
 406 0018 7047     		bx	lr
 407              	.L35:
 407:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 408              		.loc 1 407 5 is_stmt 1 view .LVU76
 409              		.syntax unified
 410              	@ 407 "board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 411 001a 30BF     		wfi
 412              	@ 0 "" 2
 413              		.thumb
 414              		.syntax unified
 415 001c 7047     		bx	lr
 416              	.L37:
 417 001e 00BF     		.align	2
 418              	.L36:
 419 0020 00ED00E0 		.word	-536810240
 420              		.cfi_endproc
 421              	.LFE82:
 423              		.section	.text.HAL_PWR_EnterSTOPMode,"ax",%progbits
 424              		.align	1
 425              		.global	HAL_PWR_EnterSTOPMode
 426              		.syntax unified
 427              		.thumb
 428              		.thumb_func
 430              	HAL_PWR_EnterSTOPMode:
 431              	.LVL4:
 432              	.LFB83:
 422:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 423:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 424:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enters Stop mode. 
 425:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Stop mode, all I/O pins keep the same state as in Run mode.
 426:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note When exiting Stop mode by issuing an interrupt or a wake-up event, 
 427:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         the HSI RC oscillator is selected as system clock.
 428:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note When the voltage regulator operates in low power mode, an additional 
 429:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         startup delay is incurred when waking up from Stop mode. 
 430:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         By keeping the internal regulator ON during Stop mode, the consumption 
 431:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         is higher although the startup time is reduced.    
 432:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param Regulator Specifies the regulator state in Stop mode.
 433:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 434:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_MAINREGULATOR_ON: Stop mode with regulator ON
 435:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_LOWPOWERREGULATOR_ON: Stop mode with low power regulator ON
 436:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param STOPEntry Specifies if Stop mode in entered with WFI or WFE instruction.
 437:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 438:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_STOPENTRY_WFI              : Enter Stop mode with WFI instruction 
 439:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_STOPENTRY_WFE              : Enter Stop mode with WFE instruction and
 440:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *                                                  clear of pending events before.
 441:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_STOPENTRY_WFE_NO_EVT_CLEAR : Enter STOP mode with WFE instruction and
ARM GAS  C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s 			page 16


 442:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *                                                  no clear of pending event before.
 443:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 444:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 445:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnterSTOPMode(uint32_t Regulator, uint8_t STOPEntry)
 446:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 433              		.loc 1 446 1 view -0
 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 0
 436              		@ frame_needed = 0, uses_anonymous_args = 0
 437              		@ link register save eliminated.
 447:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameters */
 448:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_REGULATOR(Regulator));
 438              		.loc 1 448 3 view .LVU78
 449:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 439              		.loc 1 449 3 view .LVU79
 450:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 451:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select the regulator state in Stop mode: Set PDDS and LPDS bits according to PWR_Regulator val
 452:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   MODIFY_REG(PWR->CR, (PWR_CR_PDDS | PWR_CR_LPDS), Regulator);
 440              		.loc 1 452 3 view .LVU80
 441 0000 0C4A     		ldr	r2, .L43
 442 0002 1368     		ldr	r3, [r2]
 443 0004 23F00303 		bic	r3, r3, #3
 444 0008 0343     		orrs	r3, r3, r0
 445 000a 1360     		str	r3, [r2]
 453:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 454:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 455:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 446              		.loc 1 455 3 view .LVU81
 447 000c 0A4A     		ldr	r2, .L43+4
 448 000e 1369     		ldr	r3, [r2, #16]
 449 0010 43F00403 		orr	r3, r3, #4
 450 0014 1361     		str	r3, [r2, #16]
 456:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 457:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select Stop mode entry --------------------------------------------------*/
 458:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 451              		.loc 1 458 3 view .LVU82
 452              		.loc 1 458 5 is_stmt 0 view .LVU83
 453 0016 0129     		cmp	r1, #1
 454 0018 0AD0     		beq	.L42
 459:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {   
 460:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Interrupt */
 461:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFI();
 462:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 463:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   else
 464:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 465:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     if(STOPEntry != PWR_STOPENTRY_WFE_NO_EVT_CLEAR)
 455              		.loc 1 465 5 is_stmt 1 view .LVU84
 456              		.loc 1 465 7 is_stmt 0 view .LVU85
 457 001a 0329     		cmp	r1, #3
 458 001c 01D0     		beq	.L41
 466:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     {
 467:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       /* Clear all pending event */
 468:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       __SEV();
 459              		.loc 1 468 7 is_stmt 1 view .LVU86
 460              		.syntax unified
 461              	@ 468 "board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 462 001e 40BF     		sev
ARM GAS  C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s 			page 17


 463              	@ 0 "" 2
 469:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       __WFE();
 464              		.loc 1 469 7 view .LVU87
 465              	@ 469 "board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 466 0020 20BF     		wfe
 467              	@ 0 "" 2
 468              		.thumb
 469              		.syntax unified
 470              	.L41:
 470:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     }
 471:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Event */
 472:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
 471              		.loc 1 472 5 view .LVU88
 472              		.syntax unified
 473              	@ 472 "board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 474 0022 20BF     		wfe
 475              	@ 0 "" 2
 476              		.thumb
 477              		.syntax unified
 478              	.L40:
 473:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 474:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 475:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));  
 479              		.loc 1 475 3 view .LVU89
 480 0024 044A     		ldr	r2, .L43+4
 481 0026 1369     		ldr	r3, [r2, #16]
 482 0028 23F00403 		bic	r3, r3, #4
 483 002c 1361     		str	r3, [r2, #16]
 476:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 484              		.loc 1 476 1 is_stmt 0 view .LVU90
 485 002e 7047     		bx	lr
 486              	.L42:
 461:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 487              		.loc 1 461 5 is_stmt 1 view .LVU91
 488              		.syntax unified
 489              	@ 461 "board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 490 0030 30BF     		wfi
 491              	@ 0 "" 2
 492              		.thumb
 493              		.syntax unified
 494 0032 F7E7     		b	.L40
 495              	.L44:
 496              		.align	2
 497              	.L43:
 498 0034 00700040 		.word	1073770496
 499 0038 00ED00E0 		.word	-536810240
 500              		.cfi_endproc
 501              	.LFE83:
 503              		.section	.text.HAL_PWR_EnterSTANDBYMode,"ax",%progbits
 504              		.align	1
 505              		.global	HAL_PWR_EnterSTANDBYMode
 506              		.syntax unified
 507              		.thumb
 508              		.thumb_func
 510              	HAL_PWR_EnterSTANDBYMode:
 511              	.LFB84:
 477:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
ARM GAS  C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s 			page 18


 478:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 479:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enters Standby mode.
 480:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Standby mode, all I/O pins are high impedance except for:
 481:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - Reset pad (still available) 
 482:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - RTC_AF1 pin (PC13) if configured for tamper, time-stamp, RTC 
 483:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            Alarm out, or RTC clock calibration out.
 484:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - RTC_AF2 pin (PI8) if configured for tamper or time-stamp.  
 485:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - WKUP pin 1 (PA0) if enabled.       
 486:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 487:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 488:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnterSTANDBYMode(void)
 489:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 512              		.loc 1 489 1 view -0
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 0
 515              		@ frame_needed = 0, uses_anonymous_args = 0
 516              		@ link register save eliminated.
 490:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select Standby mode */
 491:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(PWR->CR, PWR_CR_PDDS);
 517              		.loc 1 491 3 view .LVU93
 518 0000 054A     		ldr	r2, .L46
 519 0002 1368     		ldr	r3, [r2]
 520 0004 43F00203 		orr	r3, r3, #2
 521 0008 1360     		str	r3, [r2]
 492:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 493:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 494:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 522              		.loc 1 494 3 view .LVU94
 523 000a 044A     		ldr	r2, .L46+4
 524 000c 1369     		ldr	r3, [r2, #16]
 525 000e 43F00403 		orr	r3, r3, #4
 526 0012 1361     		str	r3, [r2, #16]
 495:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 496:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* This option is used to ensure that store operations are completed */
 497:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #if defined ( __CC_ARM)
 498:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __force_stores();
 499:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #endif
 500:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Request Wait For Interrupt */
 501:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __WFI();
 527              		.loc 1 501 3 view .LVU95
 528              		.syntax unified
 529              	@ 501 "board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 530 0014 30BF     		wfi
 531              	@ 0 "" 2
 502:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 532              		.loc 1 502 1 is_stmt 0 view .LVU96
 533              		.thumb
 534              		.syntax unified
 535 0016 7047     		bx	lr
 536              	.L47:
 537              		.align	2
 538              	.L46:
 539 0018 00700040 		.word	1073770496
 540 001c 00ED00E0 		.word	-536810240
 541              		.cfi_endproc
 542              	.LFE84:
 544              		.section	.text.HAL_PWR_PVDCallback,"ax",%progbits
ARM GAS  C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s 			page 19


 545              		.align	1
 546              		.weak	HAL_PWR_PVDCallback
 547              		.syntax unified
 548              		.thumb
 549              		.thumb_func
 551              	HAL_PWR_PVDCallback:
 552              	.LFB86:
 503:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 504:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 505:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief This function handles the PWR PVD interrupt request.
 506:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note This API should be called under the PVD_IRQHandler().
 507:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 508:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 509:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_PVD_IRQHandler(void)
 510:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 511:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check PWR Exti flag */
 512:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if(__HAL_PWR_PVD_EXTI_GET_FLAG() != RESET)
 513:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 514:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* PWR PVD interrupt user callback */
 515:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     HAL_PWR_PVDCallback();
 516:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     
 517:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Clear PWR Exti pending bit */
 518:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_CLEAR_FLAG();
 519:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 520:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 521:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 522:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 523:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief  PWR PVD interrupt callback
 524:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 525:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 526:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** __weak void HAL_PWR_PVDCallback(void)
 527:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 553              		.loc 1 527 1 is_stmt 1 view -0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 0
 556              		@ frame_needed = 0, uses_anonymous_args = 0
 557              		@ link register save eliminated.
 528:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 529:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****             the HAL_PWR_PVDCallback could be implemented in the user file
 530:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    */ 
 531:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 558              		.loc 1 531 1 view .LVU98
 559 0000 7047     		bx	lr
 560              		.cfi_endproc
 561              	.LFE86:
 563              		.section	.text.HAL_PWR_PVD_IRQHandler,"ax",%progbits
 564              		.align	1
 565              		.global	HAL_PWR_PVD_IRQHandler
 566              		.syntax unified
 567              		.thumb
 568              		.thumb_func
 570              	HAL_PWR_PVD_IRQHandler:
 571              	.LFB85:
 510:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check PWR Exti flag */
 572              		.loc 1 510 1 view -0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s 			page 20


 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576 0000 08B5     		push	{r3, lr}
 577              	.LCFI4:
 578              		.cfi_def_cfa_offset 8
 579              		.cfi_offset 3, -8
 580              		.cfi_offset 14, -4
 512:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 581              		.loc 1 512 3 view .LVU100
 512:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 582              		.loc 1 512 6 is_stmt 0 view .LVU101
 583 0002 064B     		ldr	r3, .L53
 584 0004 5B69     		ldr	r3, [r3, #20]
 512:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 585              		.loc 1 512 5 view .LVU102
 586 0006 13F4803F 		tst	r3, #65536
 587 000a 00D1     		bne	.L52
 588              	.L49:
 520:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 589              		.loc 1 520 1 view .LVU103
 590 000c 08BD     		pop	{r3, pc}
 591              	.L52:
 515:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     
 592              		.loc 1 515 5 is_stmt 1 view .LVU104
 593 000e FFF7FEFF 		bl	HAL_PWR_PVDCallback
 594              	.LVL5:
 518:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 595              		.loc 1 518 5 view .LVU105
 596 0012 024B     		ldr	r3, .L53
 597 0014 4FF48032 		mov	r2, #65536
 598 0018 5A61     		str	r2, [r3, #20]
 520:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 599              		.loc 1 520 1 is_stmt 0 view .LVU106
 600 001a F7E7     		b	.L49
 601              	.L54:
 602              		.align	2
 603              	.L53:
 604 001c 003C0140 		.word	1073822720
 605              		.cfi_endproc
 606              	.LFE85:
 608              		.section	.text.HAL_PWR_EnableSleepOnExit,"ax",%progbits
 609              		.align	1
 610              		.global	HAL_PWR_EnableSleepOnExit
 611              		.syntax unified
 612              		.thumb
 613              		.thumb_func
 615              	HAL_PWR_EnableSleepOnExit:
 616              	.LFB87:
 532:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 533:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 534:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Indicates Sleep-On-Exit when returning from Handler mode to Thread mode. 
 535:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Set SLEEPONEXIT bit of SCR register. When this bit is set, the processor 
 536:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       re-enters SLEEP mode when an interruption handling is over.
 537:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       Setting this bit is useful when the processor is expected to run only on
 538:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       interruptions handling.         
 539:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 540:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 541:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableSleepOnExit(void)
ARM GAS  C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s 			page 21


 542:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 617              		.loc 1 542 1 is_stmt 1 view -0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621              		@ link register save eliminated.
 543:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SLEEPONEXIT bit of Cortex System Control Register */
 544:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));
 622              		.loc 1 544 3 view .LVU108
 623 0000 024A     		ldr	r2, .L56
 624 0002 1369     		ldr	r3, [r2, #16]
 625 0004 43F00203 		orr	r3, r3, #2
 626 0008 1361     		str	r3, [r2, #16]
 545:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 627              		.loc 1 545 1 is_stmt 0 view .LVU109
 628 000a 7047     		bx	lr
 629              	.L57:
 630              		.align	2
 631              	.L56:
 632 000c 00ED00E0 		.word	-536810240
 633              		.cfi_endproc
 634              	.LFE87:
 636              		.section	.text.HAL_PWR_DisableSleepOnExit,"ax",%progbits
 637              		.align	1
 638              		.global	HAL_PWR_DisableSleepOnExit
 639              		.syntax unified
 640              		.thumb
 641              		.thumb_func
 643              	HAL_PWR_DisableSleepOnExit:
 644              	.LFB88:
 546:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 547:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 548:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables Sleep-On-Exit feature when returning from Handler mode to Thread mode. 
 549:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Clears SLEEPONEXIT bit of SCR register. When this bit is set, the processor 
 550:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       re-enters SLEEP mode when an interruption handling is over.          
 551:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 552:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 553:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableSleepOnExit(void)
 554:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 645              		.loc 1 554 1 is_stmt 1 view -0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 0
 648              		@ frame_needed = 0, uses_anonymous_args = 0
 649              		@ link register save eliminated.
 555:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear SLEEPONEXIT bit of Cortex System Control Register */
 556:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));
 650              		.loc 1 556 3 view .LVU111
 651 0000 024A     		ldr	r2, .L59
 652 0002 1369     		ldr	r3, [r2, #16]
 653 0004 23F00203 		bic	r3, r3, #2
 654 0008 1361     		str	r3, [r2, #16]
 557:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 655              		.loc 1 557 1 is_stmt 0 view .LVU112
 656 000a 7047     		bx	lr
 657              	.L60:
 658              		.align	2
 659              	.L59:
ARM GAS  C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s 			page 22


 660 000c 00ED00E0 		.word	-536810240
 661              		.cfi_endproc
 662              	.LFE88:
 664              		.section	.text.HAL_PWR_EnableSEVOnPend,"ax",%progbits
 665              		.align	1
 666              		.global	HAL_PWR_EnableSEVOnPend
 667              		.syntax unified
 668              		.thumb
 669              		.thumb_func
 671              	HAL_PWR_EnableSEVOnPend:
 672              	.LFB89:
 558:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 559:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 560:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables CORTEX M4 SEVONPEND bit. 
 561:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Sets SEVONPEND bit of SCR register. When this bit is set, this causes 
 562:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       WFE to wake up when an interrupt moves from inactive to pended.
 563:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 564:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 565:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableSEVOnPend(void)
 566:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 673              		.loc 1 566 1 is_stmt 1 view -0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677              		@ link register save eliminated.
 567:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SEVONPEND bit of Cortex System Control Register */
 568:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SEVONPEND_Msk));
 678              		.loc 1 568 3 view .LVU114
 679 0000 024A     		ldr	r2, .L62
 680 0002 1369     		ldr	r3, [r2, #16]
 681 0004 43F01003 		orr	r3, r3, #16
 682 0008 1361     		str	r3, [r2, #16]
 569:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 683              		.loc 1 569 1 is_stmt 0 view .LVU115
 684 000a 7047     		bx	lr
 685              	.L63:
 686              		.align	2
 687              	.L62:
 688 000c 00ED00E0 		.word	-536810240
 689              		.cfi_endproc
 690              	.LFE89:
 692              		.section	.text.HAL_PWR_DisableSEVOnPend,"ax",%progbits
 693              		.align	1
 694              		.global	HAL_PWR_DisableSEVOnPend
 695              		.syntax unified
 696              		.thumb
 697              		.thumb_func
 699              	HAL_PWR_DisableSEVOnPend:
 700              	.LFB90:
 570:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 571:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 572:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables CORTEX M4 SEVONPEND bit. 
 573:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Clears SEVONPEND bit of SCR register. When this bit is set, this causes 
 574:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       WFE to wake up when an interrupt moves from inactive to pended.         
 575:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 576:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 577:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableSEVOnPend(void)
ARM GAS  C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s 			page 23


 578:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 701              		.loc 1 578 1 is_stmt 1 view -0
 702              		.cfi_startproc
 703              		@ args = 0, pretend = 0, frame = 0
 704              		@ frame_needed = 0, uses_anonymous_args = 0
 705              		@ link register save eliminated.
 579:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear SEVONPEND bit of Cortex System Control Register */
 580:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SEVONPEND_Msk));
 706              		.loc 1 580 3 view .LVU117
 707 0000 024A     		ldr	r2, .L65
 708 0002 1369     		ldr	r3, [r2, #16]
 709 0004 23F01003 		bic	r3, r3, #16
 710 0008 1361     		str	r3, [r2, #16]
 581:board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 711              		.loc 1 581 1 is_stmt 0 view .LVU118
 712 000a 7047     		bx	lr
 713              	.L66:
 714              		.align	2
 715              	.L65:
 716 000c 00ED00E0 		.word	-536810240
 717              		.cfi_endproc
 718              	.LFE90:
 720              		.text
 721              	.Letext0:
 722              		.file 2 "c:\\st\\stm32cubeide_1.12.1\\stm32cubeide\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 723              		.file 3 "c:\\st\\stm32cubeide_1.12.1\\stm32cubeide\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 724              		.file 4 "board/stm32f411ceux_board/Drivers/CMSIS/Include/core_cm4.h"
 725              		.file 5 "board/stm32f411ceux_board/Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 726              		.file 6 "board/stm32f411ceux_board/Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 727              		.file 7 "board/stm32f411ceux_board/Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr.h"
ARM GAS  C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_pwr.c
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:18     .text.HAL_PWR_DeInit:0000000000000000 $t
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:24     .text.HAL_PWR_DeInit:0000000000000000 HAL_PWR_DeInit
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:46     .text.HAL_PWR_DeInit:0000000000000014 $d
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:51     .text.HAL_PWR_EnableBkUpAccess:0000000000000000 $t
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:57     .text.HAL_PWR_EnableBkUpAccess:0000000000000000 HAL_PWR_EnableBkUpAccess
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:90     .text.HAL_PWR_EnableBkUpAccess:0000000000000014 $d
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:96     .text.HAL_PWR_DisableBkUpAccess:0000000000000000 $t
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:102    .text.HAL_PWR_DisableBkUpAccess:0000000000000000 HAL_PWR_DisableBkUpAccess
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:135    .text.HAL_PWR_DisableBkUpAccess:0000000000000014 $d
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:141    .text.HAL_PWR_ConfigPVD:0000000000000000 $t
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:147    .text.HAL_PWR_ConfigPVD:0000000000000000 HAL_PWR_ConfigPVD
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:234    .text.HAL_PWR_ConfigPVD:000000000000007c $d
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:240    .text.HAL_PWR_EnablePVD:0000000000000000 $t
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:246    .text.HAL_PWR_EnablePVD:0000000000000000 HAL_PWR_EnablePVD
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:263    .text.HAL_PWR_EnablePVD:0000000000000008 $d
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:268    .text.HAL_PWR_DisablePVD:0000000000000000 $t
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:274    .text.HAL_PWR_DisablePVD:0000000000000000 HAL_PWR_DisablePVD
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:291    .text.HAL_PWR_DisablePVD:0000000000000008 $d
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:296    .text.HAL_PWR_EnableWakeUpPin:0000000000000000 $t
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:302    .text.HAL_PWR_EnableWakeUpPin:0000000000000000 HAL_PWR_EnableWakeUpPin
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:321    .text.HAL_PWR_EnableWakeUpPin:000000000000000c $d
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:326    .text.HAL_PWR_DisableWakeUpPin:0000000000000000 $t
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:332    .text.HAL_PWR_DisableWakeUpPin:0000000000000000 HAL_PWR_DisableWakeUpPin
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:351    .text.HAL_PWR_DisableWakeUpPin:000000000000000c $d
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:356    .text.HAL_PWR_EnterSLEEPMode:0000000000000000 $t
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:362    .text.HAL_PWR_EnterSLEEPMode:0000000000000000 HAL_PWR_EnterSLEEPMode
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:419    .text.HAL_PWR_EnterSLEEPMode:0000000000000020 $d
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:424    .text.HAL_PWR_EnterSTOPMode:0000000000000000 $t
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:430    .text.HAL_PWR_EnterSTOPMode:0000000000000000 HAL_PWR_EnterSTOPMode
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:498    .text.HAL_PWR_EnterSTOPMode:0000000000000034 $d
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:504    .text.HAL_PWR_EnterSTANDBYMode:0000000000000000 $t
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:510    .text.HAL_PWR_EnterSTANDBYMode:0000000000000000 HAL_PWR_EnterSTANDBYMode
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:539    .text.HAL_PWR_EnterSTANDBYMode:0000000000000018 $d
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:545    .text.HAL_PWR_PVDCallback:0000000000000000 $t
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:551    .text.HAL_PWR_PVDCallback:0000000000000000 HAL_PWR_PVDCallback
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:564    .text.HAL_PWR_PVD_IRQHandler:0000000000000000 $t
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:570    .text.HAL_PWR_PVD_IRQHandler:0000000000000000 HAL_PWR_PVD_IRQHandler
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:604    .text.HAL_PWR_PVD_IRQHandler:000000000000001c $d
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:609    .text.HAL_PWR_EnableSleepOnExit:0000000000000000 $t
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:615    .text.HAL_PWR_EnableSleepOnExit:0000000000000000 HAL_PWR_EnableSleepOnExit
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:632    .text.HAL_PWR_EnableSleepOnExit:000000000000000c $d
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:637    .text.HAL_PWR_DisableSleepOnExit:0000000000000000 $t
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:643    .text.HAL_PWR_DisableSleepOnExit:0000000000000000 HAL_PWR_DisableSleepOnExit
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:660    .text.HAL_PWR_DisableSleepOnExit:000000000000000c $d
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:665    .text.HAL_PWR_EnableSEVOnPend:0000000000000000 $t
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:671    .text.HAL_PWR_EnableSEVOnPend:0000000000000000 HAL_PWR_EnableSEVOnPend
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:688    .text.HAL_PWR_EnableSEVOnPend:000000000000000c $d
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:693    .text.HAL_PWR_DisableSEVOnPend:0000000000000000 $t
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:699    .text.HAL_PWR_DisableSEVOnPend:0000000000000000 HAL_PWR_DisableSEVOnPend
C:\Users\vanlo\AppData\Local\Temp\cc1vcpUU.s:716    .text.HAL_PWR_DisableSEVOnPend:000000000000000c $d

NO UNDEFINED SYMBOLS
